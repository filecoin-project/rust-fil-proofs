[package]
name = "storage-proofs-porep"
version = "12.0.0"
authors = ["dignifiedquire <me@dignifiedquire.com>"]
description = "Proofs of replication"
license = "MIT OR Apache-2.0"
edition = "2018"
repository = "https://github.com/filecoin-project/rust-fil-proofs"
readme = "README.md"

[dependencies]
crossbeam = { workspace = true }
storage-proofs-core = { workspace = true }
sha2raw = { workspace = true }
filecoin-hashers = { workspace = true }
merkletree = { workspace = true }
memmap2 = { workspace = true }
num-bigint = { workspace = true }
num-traits = { workspace = true }
rayon = { workspace = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = { workspace = true }
ff = { workspace = true }
bellperson = { workspace = true }
log = { workspace = true }
pretty_assertions = { workspace = true }
generic-array = { workspace = true }
anyhow = { workspace = true }
neptune = { workspace = true, features = [
    "bls",
    "arity2",
    "arity4",
    "arity8",
    "arity11",
    "arity16",
    "arity24",
    "arity36",
] }
num_cpus = { workspace = true }
hex = { workspace = true }
bincode = { workspace = true }
byteorder = { workspace = true }
lazy_static = { workspace = true }
byte-slice-cast = { workspace = true }
hwloc = { workspace = true, optional = true }
libc = { workspace = true }
fdlimit = { workspace = true }
fr32 = { workspace = true }
yastl = { workspace = true }
blstrs = { workspace = true }

[target."cfg(target_arch = \"aarch64\")".dependencies]
sha2 = { workspace = true, features = ["compress", "asm"] }
[target."cfg(not(target_arch = \"aarch64\"))".dependencies]
sha2 = { workspace = true, features = ["compress"] }

[dev-dependencies]
tempfile = { workspace = true }
rand = { workspace = true }
rand_xorshift = { workspace = true }
criterion = { workspace = true }
glob = { workspace = true }
filecoin-hashers = { workspace = true }
fil_logger = { workspace = true }

[features]
default = ["opencl", "multicore-sdr"]
cuda = [
    "storage-proofs-core/cuda",
    "filecoin-hashers/cuda",
    "neptune/cuda",
    "bellperson/cuda",
]
opencl = [
    "storage-proofs-core/opencl",
    "filecoin-hashers/opencl",
    "neptune/opencl",
    "bellperson/opencl",
]
isolated-testing = []
multicore-sdr = ["hwloc"]

[[bench]]
name = "encode"
harness = false

[[bench]]
name = "parents"
harness = false
