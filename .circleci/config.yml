
version: 2
jobs:
  cargo_fetch:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
      - run: rustup install $(cat rust-toolchain)
      - run: rustup default $(cat rust-toolchain)
      - run: rustup component add rustfmt-preview
      - run: rustup component add clippy-preview
      - run: cargo update
      - run: cargo fetch
      - run: rustc +stable --version
      - run: rustc +$(cat rust-toolchain) --version
      - persist_to_workspace:
          root: "."
          paths:
            - Cargo.lock
      - save_cache:
          key: cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
          paths:
            - /root/.cargo
            - /root/.rustup
  test:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
      - restore_cache:
          keys:
            - parameter-cache-{{ .Revision }}
      - run:
          name: Test (stable)
          command: cargo +stable test --verbose --frozen --all
          no_output_timeout: 15m
      - run:
          name: Prune the output files
          command: |
            for file in target/debug/* target/debug/.??*; do
              [ -d $file -o ! -x $file ] && rm -r $file
            done
      - persist_to_workspace:
          root: "."
          paths:
            - target/debug/*

  test_release:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
            - parameter-cache-{{ .Revision }}
      - run:
          name: Test (stable) in release profile
          command: |
            cargo +stable test --verbose --release --frozen --all
            RUSTFLAGS="-D warnings" cargo +stable build --examples --release --frozen --all

  test_disk_trees:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
            - parameter-cache-{{ .Revision }}
      - run:
          name: Test (nightly) disk-trees feature
          command: |
            cargo +$(cat rust-toolchain) test --verbose --release -p storage-proofs --features disk-trees -Z package-features
          environment:
            FIL_PROOFS_REPLICATED_TREES_DIR: replicated-disk-trees

  test_ignored_release:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
            - parameter-cache-{{ .Revision }}
      - run:
          name: Test (stable) in release profile
          command: cargo +stable test --verbose --release --frozen --all -- --ignored
      - save_cache:
          key: parameter-cache-{{ .Revision }}
          paths:
            - /root/.filecoin-parameter-cache

  test_nightly:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
      - restore_cache:
          keys:
            - parameter-cache-{{ .Revision }}
      - run:
          name: Test (nightly)
          command: cargo +$(cat rust-toolchain) test --verbose --frozen --all
          no_output_timeout: 15m

  bench_nightly:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
      - restore_cache:
          keys:
            - parameter-cache-{{ .Revision }}
      - run:
          name: Benchmarks (nightly)
          command: cargo +$(cat rust-toolchain) build --benches --verbose --frozen --all
          no_output_timeout: 15m

  rustfmt:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
      - run:
          name: Run cargo fmt
          command: cargo fmt --all -- --check

  clippy:
    docker:
      - image: filecoin/rust:latest
    working_directory: /mnt/crate
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v10-{{ checksum "rust-toolchain" }}-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}-{{ arch }}
      - run:
          name: Run cargo clippy
          command: cargo clippy --all

workflows:
  version: 2
  test_all:
    jobs:
      - cargo_fetch
      - rustfmt:
          requires:
            - cargo_fetch
      - clippy:
          requires:
            - cargo_fetch
      - test_release:
          requires:
            - cargo_fetch
      - test_disk_trees:
          requires:
            - cargo_fetch
      - test_ignored_release:
          requires:
            - cargo_fetch
      - test:
          requires:
            - cargo_fetch
      - test_nightly:
          requires:
            - cargo_fetch
      - bench_nightly:
          requires:
            - cargo_fetch
