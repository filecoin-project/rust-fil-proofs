[package]
name = "filecoin-proofs"
description = "The Filecoin specific aspects of storage-proofs, including a C based FFI, to generate and verify proofs."
version = "18.1.0"
authors = ["dignifiedquire <dignifiedquire@gmail.com>", "laser <l@s3r.com>", "porcuquine <porcuquine@users.noreply.github.com>"]
license = "MIT OR Apache-2.0"
edition = "2018"
repository = "https://github.com/filecoin-project/rust-fil-proofs"
readme = "README.md"

[dependencies]
filecoin-hashers = { workspace = true, features = ["poseidon", "sha256"] }
fr32.workspace = true
storage-proofs-core.workspace = true
storage-proofs-porep.workspace = true
storage-proofs-post.workspace = true
storage-proofs-update.workspace = true
# Sorted alphabetically
anyhow.workspace = true
bellperson.workspace = true
bincode.workspace = true
blake2b_simd.workspace = true
blstrs.workspace = true
ff.workspace = true
generic-array.workspace = true
gperftools = { workspace = true, optional = true }
hex.workspace = true
iowrap = "0.2.1"
lazy_static.workspace = true
log.workspace = true
memmap2.workspace = true
merkletree.workspace = true
once_cell = "1.8.0"
rand.workspace = true
rayon.workspace = true
serde = { workspace = true, features = ["rc", "derive"] }
serde_json.workspace = true
sha2.workspace = true
typenum.workspace = true

[dev-dependencies]
# Sorted alphabetically
criterion.workspace = true
fil_logger.workspace = true
rand_xorshift.workspace = true
tempfile.workspace = true
walkdir = "2.3.2"

[features]
default = ["opencl"]
cpu-profile = ["gperftools"]
heap-profile = ["gperftools/heap"]
simd = ["storage-proofs-core/simd"]
asm = ["storage-proofs-core/asm"]
cuda = [
    "storage-proofs-core/cuda",
    "storage-proofs-porep/cuda",
    "storage-proofs-post/cuda",
    "storage-proofs-update/cuda",
    "bellperson/cuda",
    "filecoin-hashers/cuda",
]
cuda-supraseal = [
    "storage-proofs-core/cuda-supraseal",
    "storage-proofs-porep/cuda",
    "storage-proofs-post/cuda",
    "storage-proofs-update/cuda",
    "bellperson/cuda-supraseal",
    "filecoin-hashers/cuda",
]
opencl = [
    "storage-proofs-core/opencl",
    "storage-proofs-porep/opencl",
    "storage-proofs-post/opencl",
    "storage-proofs-update/opencl",
    "bellperson/opencl",
    "filecoin-hashers/opencl",
]
multicore-sdr = ["storage-proofs-porep/multicore-sdr"]
big-tests = []
# This feature enables a fixed number of discarded rows for TreeR. The `FIL_PROOFS_ROWS_TO_DISCARD`
# setting is ignored, no `TemporaryAux` file will be written.
fixed-rows-to-discard = [
    "storage-proofs-core/fixed-rows-to-discard",
    "storage-proofs-porep/fixed-rows-to-discard",
    "storage-proofs-post/fixed-rows-to-discard",
    "storage-proofs-update/fixed-rows-to-discard",
]

[[bench]]
name = "preprocessing"
harness = false

[[bench]]
name = "aggregation"
harness = false
