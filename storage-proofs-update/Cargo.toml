[package]
name = "storage-proofs-update"
version = "18.1.0"
authors = ["dignifiedquire <me@dignifiedquire.com>"]
description = "Proof of SDR-PoRep CC-Sector Update"
license = "MIT OR Apache-2.0"
edition = "2018"
repository = "https://github.com/filecoin-project/rust-fil-proofs"
readme = "README.md"

[dependencies]
filecoin-hashers = { workspace = true, features = ["poseidon", "sha256"] }
fr32.workspace = true
storage-proofs-core.workspace = true
storage-proofs-porep.workspace = true
# Sorted alphabetically
merkletree.workspace = true
rayon.workspace = true
serde = { workspace = true, features = ["derive"] }
ff.workspace = true
bellperson.workspace = true
blstrs.workspace = true
log.workspace = true
generic-array.workspace = true
anyhow.workspace = true
neptune.workspace = true
lazy_static.workspace = true
memmap2.workspace = true

[dev-dependencies]
# Sorted alphabetically
tempfile.workspace = true
rand.workspace = true
rand_xorshift.workspace = true

[features]
default = ["opencl", "multicore-sdr"]
isolated-testing = []
opencl = [
    "storage-proofs-core/opencl",
    "storage-proofs-porep/opencl",
    "filecoin-hashers/opencl",
    "neptune/opencl",
    "bellperson/opencl",
]
cuda = [
    "storage-proofs-core/cuda",
    "storage-proofs-porep/cuda",
    "filecoin-hashers/cuda",
    "neptune/cuda",
    "bellperson/cuda",
]
multicore-sdr = [
    "storage-proofs-porep/multicore-sdr",
]
# This feature enables a fixed number of discarded rows for TreeR. The `FIL_PROOFS_ROWS_TO_DISCARD`
# setting is ignored, no `TemporaryAux` file will be written.
fixed-rows-to-discard = ["storage-proofs-core/fixed-rows-to-discard", "storage-proofs-porep/fixed-rows-to-discard"]
